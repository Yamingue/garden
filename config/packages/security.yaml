security:
    enable_authenticator_manager: true
    # https://symfony.com/doc/current/security.html#registering-the-user-hashing-passwords
    password_hashers:
        Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface: 'auto'
        App\Entity\Admin:
            algorithm: auto
        App\Entity\Ecole:
            algorithm: auto
        App\Entity\Gardienne:
            algorithm: auto
        App\Entity\User:
            algorithm: auto




    # https://symfony.com/doc/current/security.html#loading-the-user-the-user-provider
    providers:
        # used to reload user from session & other features (e.g. switch_user)
        app_admin_provider:
            entity:
                class: App\Entity\Admin
                property: email
        app_ecole_provider:
            entity:
                class: App\Entity\Ecole
                property: email
        # used to reload user from session & other features (e.g. switch_user)
        app_gardienne_provider:
            entity:
                class: App\Entity\Gardienne
                property: email
        # used to reload user from session & other features (e.g. switch_user)
        app_user_provider:
            entity:
                class: App\Entity\User
                property: email
        # used to reload user from session & other features (e.g. switch_user)
    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false
        super:
            pattern: ^/super
            provider: app_ecole_provider
            custom_authenticator: App\Security\EcoleAuthenticator
            logout:
                path: app_logout
                # where to redirect after logout
                # target: app_any_route
        gardienne:
            pattern: ^/gardienne
            provider: app_gardienne_provider
            custom_authenticator: App\Security\GardienneAuthenticator
            logout:
                path: app_logout
                # where to redirect after logout
                # target: app_any_route
        parent:
            pattern: ^/parent
            provider: app_user_provider
            custom_authenticator: App\Security\ParentAuthenticator
            logout:
                path: app_logout
                # where to redirect after logout
                # target: app_any_route
        api_parent_main:
            pattern: ^/api/parent/login
            stateless: true
            provider: app_user_provider
            json_login:
                check_path: /api/parent/login
                username_path: email
                password_path: password
                success_handler: lexik_jwt_authentication.handler.authentication_success
                failure_handler: lexik_jwt_authentication.handler.authentication_failure
        api_parent:
            pattern:   ^/api/parent
            stateless: true
            guard:
                provider: app_user_provider
                authenticators:
                    - lexik_jwt_authentication.jwt_token_authenticator
        api_gardienne_main:
            pattern: ^/api/gardienne/login
            stateless: true
            provider: app_gardienne_provider
            json_login:
                check_path: /api/gardienne/login
                username_path: email
                password_path: password
                success_handler: lexik_jwt_authentication.handler.authentication_success
                failure_handler: lexik_jwt_authentication.handler.authentication_failure
        api_gardienne:
            pattern:   ^/api/gardienne
            stateless: true
            guard:
                provider: app_gardienne_provider
                authenticators:
                    - lexik_jwt_authentication.jwt_token_authenticator
        main:
            lazy: true
            provider: app_gardienne_provider
            logout: 
                path: /logout
       
            # activate different ways to authenticate
            # https://symfony.com/doc/current/security.html#the-firewall

            # https://symfony.com/doc/current/security/impersonating_user.html
            # switch_user: true
    # Easy way to control access for large sections of your site
    # Note: Only the *first* access control that matches will be used
    access_control:
        # - { path: ^/admin, roles: ROLE_ADMIN }
         - { path: ^/super/login, roles: IS_AUTHENTICATED_ANONYMOUSLY }
         - { path: ^/gardienne/login, roles: IS_AUTHENTICATED_ANONYMOUSLY }
         - { path: ^/parent/login, roles: IS_AUTHENTICATED_ANONYMOUSLY }
         - { path: ^/api/parent/login, roles: IS_AUTHENTICATED_ANONYMOUSLY }
         - { path: ^/api/parent/check, roles: IS_AUTHENTICATED_ANONYMOUSLY }
         - { path: ^/super, roles: ROLE_USER }
         - { path: ^/gardienne, roles: ROLE_USER }
         - { path: ^/parent, roles: ROLE_USER }
         - { path: ^/api/parent, roles: ROLE_USER }
         - { path: ^/api/gardienne, roles: ROLE_USER }
